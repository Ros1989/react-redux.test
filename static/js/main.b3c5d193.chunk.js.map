{"version":3,"sources":["redux/types.js","redux/actions.js","components/Alert.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader.js","components/FetchedPosts.js","App.js","reportWebVitals.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["CREATE_POST","FETCH_POST","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","Alert","className","role","PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","setState","createPost","changeInputHandler","persist","prev","target","name","value","onSubmit","this","alert","htmlFor","onChange","style","marginTop","React","Component","mapDispatchToProps","post","connect","app","syncPosts","posts","length","map","Post","Loader","useDispatch","useSelector","fetchedPosts","loading","onClick","App","FetchedPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","a","fetch","response","json","saga","createSagaMiddleWare","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c5d193.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST';\r\nexport const FETCH_POST = 'POST/FETCH_POST';\r\nexport const REQUEST_POSTS = 'POST/REQUEST_POSTS'\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';","import { CREATE_POST } from './types'\r\nimport { FETCH_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, REQUEST_POSTS} from './types'\r\n\r\n\r\nexport function createPost(post) {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post\r\n    }\r\n}\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER\r\n    }\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER\r\n    }\r\n}\r\n\r\nexport function showAlert(text) {\r\n    return dispatch => {\r\n        dispatch({\r\n        type: SHOW_ALERT,\r\n            payload: text\r\n        })\r\n        setTimeout(() => {\r\n            dispatch(hideAlert())\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport function hideAlert() {\r\n    return {\r\n        type: HIDE_ALERT\r\n    }\r\n}\r\n\r\n// export function fetchPosts() {\r\n//     return async dispatch => {\r\n//         try {\r\n// dispatch(showLoader())\r\n//         const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n//         const json = await response.json()\r\n//         setTimeout(() => {\r\n// dispatch({ type: FETCH_POST, payload: json })\r\n//         dispatch(hideLoader())\r\n//         }, 2000)\r\n//         } catch (e) {\r\n//             dispatch(showAlert('Что-то пошло не так'))\r\n//             dispatch(hideLoader())\r\n//         }\r\n        \r\n        \r\n//     }\r\n// }\r\n\r\n//REDUX SAGA\r\nexport function fetchPosts() {\r\n    return  {\r\n        type: REQUEST_POSTS\r\n        \r\n    }\r\n}","import React from 'react'\r\n\r\nexport const Alert = ({text}) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n                  {text}  \r\n                </div>\r\n)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../redux/actions'\r\nimport { showAlert } from '../redux/actions'\r\nimport { Alert } from './Alert'\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n        const { title } = this.state\r\n\r\n        if (!title.trim()) {\r\n            return this.props.showAlert('Названия поста не может быть пустым')\r\n        }\r\n\r\n        const newPost = {\r\n            title, id: Date.now().toString()\r\n        }\r\n        // console.log(newPost)\r\n        this.setState({ title: \"\" })\r\n        this.props.createPost(newPost)\r\n    }\r\n\r\n    changeInputHandler = event => {\r\n        event.persist()\r\n        this.setState(prev => ({...prev, ...{\r\n            [event.target.name]:event.target.value\r\n        }}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitHandler}>\r\n                {this.props.alert && <Alert text={this.props.alert} />}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Заголовок поста</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"title\"\r\n                        value={this.state.title}\r\n                        name=\"title\"\r\n                        onChange={this.changeInputHandler}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-success\" type=\"submit\" style={{marginTop:10}}>Создать</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createPost, showAlert\r\n}\r\nconst mapStateToProps = state => ({\r\n    alert: state.app.alert\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (PostForm)","import React from 'react'\r\n\r\nexport default ({post}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"title\"> {post.title}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Post from './Post'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n    if (!syncPosts.length) {\r\n        return <p className=\"text-center\">Постов пока что нет</p>\r\n    }\r\n    return syncPosts.map(post => <Post post={post} key={post.id}/>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        syncPosts: state.posts.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null) (Posts);","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n<div className=\"spinner-border text-danger\" role=\"status\">\r\n<span className=\"sr-only\">Loading...</span>\r\n</div>\r\n)","import React from 'react'\r\nimport Post from './Post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../redux/actions'\r\nimport { Loader } from './Loader'\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector(state => state.posts.fetchedPosts)\r\n    const loading = useSelector(state => state.app.loading)\r\n\r\n    if (loading) {\r\n        return <Loader/>  \r\n    }\r\n\r\n     if (!posts.length) {\r\n         return <button\r\n             className=\"btn btn-primary\"\r\n             onClick={() => dispatch(fetchPosts())}\r\n         >\r\n             Зарузить\r\n         </button>\r\n    }\r\n    return posts.map(post => <Post post={post} key={post.id}/>)\r\n}","import React from 'react'\nimport PostForm from './components/PostForm'\nimport Posts from './components/Posts'\nimport FetchedPosts from './components/FetchedPosts'\n\nfunction App() {\n  return (\n    <div className=\"container pt-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n         <PostForm/>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Синхронные посты</h2>\n          <Posts/>\n        </div>\n        <div className=\"col\">\n          <h2>Асинхронные посты</h2>\n          <FetchedPosts/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_POST } from './types'\r\nimport {FETCH_POST} from './types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    fetchedPosts: []\r\n}\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST:\r\n            return {...state, posts: state.posts.concat([action.payload])};\r\n            // return {...state, posts: [...state.posts, action.payload]};\r\n        case FETCH_POST:\r\n            return {...state, fetchedPosts: action.payload}\r\n       default: return state\r\n   }\r\n}","import { SHOW_LOADER } from '../redux/types'\r\nimport {HIDE_LOADER, SHOW_ALERT, HIDE_ALERT} from '../redux/types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport const appReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return { ...state, loading: true }\r\n        case HIDE_LOADER:\r\n            return { ...state, loading: false }\r\n        case SHOW_ALERT:\r\n            return { ...state, alert: action.payload }\r\n        case HIDE_ALERT:\r\n            return { ...state, alert: null}\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { postsReducer } from './postsReducer'\r\nimport {appReducer} from './appReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    app: appReducer\r\n})","import { CREATE_POST } from './types'\r\nimport {showAlert} from './actions'\r\n\r\nconst forbidden = ['fuck', 'seks', 'no' ]\r\n\r\nexport function forbiddenWordsMiddleware({ dispatch }) {\r\n    return function (next) {\r\n        return function (action) {\r\n            if (action.type === CREATE_POST) {\r\n                const found = forbidden.filter(w => action.payload.title.includes(w))\r\n                if (found.length) {\r\n                    return dispatch(showAlert('Такие слова не возможно добавить'))\r\n                }\r\n            }\r\n            return next(action)\r\n        }\r\n    }\r\n}","import { takeEvery, put, call } from 'redux-saga/effects'\r\nimport { REQUEST_POSTS, FETCH_POST } from './types'\r\nimport {showLoader, hideLoader, showAlert} from './actions'\r\n\r\nexport function* sagaWatcher() {\r\nyield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n    try {\r\n    yield put(showLoader())\r\n    const payload = yield call(fetchPosts)\r\n    yield put({ type: FETCH_POST, payload })\r\n    yield put(hideLoader())\r\n    } catch (e) {\r\n    yield put(showAlert('Что-то пошло не так'))\r\n    yield put(hideLoader())\r\n    }\r\n    \r\n}\r\n\r\nasync function fetchPosts() {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n    return await response.json()\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {compose, createStore, applyMiddleware}  from 'redux'\nimport { rootReducer } from './redux/rootReducer'\nimport thunk from 'redux-thunk'\nimport { forbiddenWordsMiddleware } from './redux/middleware'\nimport createSagaMiddleWare from 'redux-saga'\nimport {sagaWatcher} from './redux/sagas'\n\nconst saga = createSagaMiddleWare()\n\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk, forbiddenWordsMiddleware, saga\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\nsaga.run(sagaWatcher)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}